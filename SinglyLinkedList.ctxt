#BlueJ class context
comment0.target=SinglyLinkedList
comment0.text=\r\n\ A\ basic\ singly\ linked\ list\ implementation.\r\n\r\n\ @author\ Michael\ T.\ Goodrich\r\n\ @author\ Roberto\ Tamassia\r\n\ @author\ Michael\ H.\ Goldwasser\r\n
comment1.params=
comment1.target=SinglyLinkedList()
comment1.text=Constructs\ an\ initially\ empty\ list.
comment10.params=
comment10.target=java.lang.Object\ removeFirst()
comment10.text=\r\n\ Removes\ and\ returns\ the\ first\ element\ of\ the\ list.\r\n\ @return\ the\ removed\ element\ (or\ null\ if\ empty)\r\n
comment11.params=o
comment11.target=boolean\ equals(java.lang.Object)
comment12.params=
comment12.target=SinglyLinkedList\ clone()
comment13.params=
comment13.target=int\ hashCode()
comment14.params=
comment14.target=java.lang.String\ toString()
comment14.text=\r\n\ Produces\ a\ string\ representation\ of\ the\ contents\ of\ the\ list.\r\n\ This\ exists\ for\ debugging\ purposes\ only.\r\n
comment2.params=
comment2.target=Node\ getHead()
comment2.text=bajo\ reserva\ de\ uso\ mientras\ se\ convierte\ en\ un\ TDA\ inmutable
comment3.params=
comment3.target=Node\ getTail()
comment4.params=
comment4.target=int\ size()
comment4.text=\r\n\ access\ methods\r\n\ @return\ number\ of\ elements\ in\ the\ linked\ list\r\n
comment5.params=
comment5.target=boolean\ isEmpty()
comment5.text=\r\n\ Tests\ whether\ the\ linked\ list\ is\ empty.\r\n\ @return\ true\ if\ the\ linked\ list\ is\ empty,\ false\ otherwise\r\n
comment6.params=
comment6.target=java.lang.Object\ first()
comment6.text=\r\n\ Returns\ (but\ does\ not\ remove)\ the\ first\ element\ of\ the\ list\r\n\ @return\ element\ at\ the\ front\ of\ the\ list\ (or\ null\ if\ empty)\r\n
comment7.params=
comment7.target=java.lang.Object\ last()
comment7.text=\r\n\ Returns\ (but\ does\ not\ remove)\ the\ last\ element\ of\ the\ list.\r\n\ @return\ element\ at\ the\ end\ of\ the\ list\ (or\ null\ if\ empty)\r\n
comment8.params=e
comment8.target=void\ addFirst(java.lang.Object)
comment8.text=\r\n\ update\ methods\r\n\ Adds\ an\ element\ to\ the\ front\ of\ the\ list.\r\n\ @param\ e\ \ the\ new\ element\ to\ add\r\n
comment9.params=e
comment9.target=void\ addLast(java.lang.Object)
comment9.text=\r\n\ Adds\ an\ element\ to\ the\ end\ of\ the\ list.\r\n\ @param\ e\ \ the\ new\ element\ to\ add\r\n
numComments=15
